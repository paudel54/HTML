// COLOR VARIABLES
$color-primary: #c69963;
$color-primary-dark: #b28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483a;
$color-grey-dark-2: #6d5d4b;

// FONT VARIABLES
$font-primary: "Nunito", sans-serif;
$font-display: "Josefin Sans", sans-serif;

//SCREEN RESPONSIVE BREAKPOINTS;
//1200px/16 = 75em
$bp-largest: 75em;

//1000px/16 = 62.5em breakpoint
$bp-large: 62.5em;

//800px/16 = 50em
$bp-medium: 50em;

//600px/16 = 37.5 em
$bp-small: 37.5em;

//ADDING GLOBAL RESET

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; //10/16px  -. 1rem 10px

    //for 1200px width we change 1 rem = 8px. ie, 8/16*100 = 505
    @media only screen and (max-width: $bp-largest) {
        //here now 1 rem changes to 8 px all sudden in all used elements
        font-size: 50%;
    }
}

body {
    font-family: $font-primary;
    color: $color-grey-dark-2;
    font-weight: 300;
    line-height: 1.6;
}

//applied display grid prop onto the main container
.container {
    display: grid;
    //min-content-> adjust the height of content
    //defined row tracks with use of vh and vw for responsiveness
    grid-template-rows: 80vh min-content 40vw repeat(3, min-content);

    //lets say 1140px total screen size divided by 8 total equal col gives 142.5px
    //so , 142.5 px be considered as 14 rem where 1 rem = 10px
    grid-template-columns:
        [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start]
        repeat(8, [col-start] minmax(min-content, 14rem) [col-end])
        //this works as  col-start1, col-start 2..... col-start 8, likewise col-end 1, col-end 2;
        [center-end] minmax(6rem, 1fr) [full-end];

    // & > * {
    //     padding: 40px;
    //     font-size: 3rem;
    // }

    //CHANGING GRID LAYOUT ON 1000-PX BREAKPOINT
    @media only screen and (max-width: $bp-large) {
        display: grid;
        grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
        grid-template-columns:
            [full-start] minmax(6rem, 1fr) [center-start]
            repeat(8, [col-start] minmax(min-content, 14rem) [col-end])
            [center-end] minmax(6rem, 1fr) [full-end];
    }

    //CHANGING GRID DEFINATION FOR 800px

    @media only screen and (max-width: $bp-medium) {
        display: grid;
        // grid-template-rows: 6rem calc(100vh) min-content min-content min-content repeat(3, min-content);
        //grid layout automatically defines min-contents so we dont't  need to define explicitely

        grid-template-rows: 6rem calc(100vh);
    }
}
